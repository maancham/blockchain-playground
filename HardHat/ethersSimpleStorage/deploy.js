const { ethers } = require("ethers");
const fs = require("fs-extra");
require("dotenv").config();

async function main() {
  let provider = new ethers.JsonRpcProvider(process.env.RPC_URL);
  let wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
  const abi = fs.readFileSync("./simple_storage_sol_SimpleStorage.abi", "utf8");
  const binary = fs.readFileSync(
    "./simple_storage_sol_SimpleStorage.bin",
    "utf8"
  );
  const contractFactory = new ethers.ContractFactory(abi, binary, wallet);
  console.log("Deploying in progress...");
  const contract = await contractFactory.deploy();
  console.log(contract);

  // you receive deployTransaction (tx response) when you deploy
  // but you only receive tx receipt after waiting for a tx to finish

  let currentFavoriteNumber = await contract.retrieve();
  console.log(`Current Favorite Number: ${currentFavoriteNumber}`);
  console.log("Updating favorite number...");
  const transactionResponse = await contract.storeFav("7");
  const transactionReceipt = await transactionResponse.wait();
  currentFavoriteNumber = await contract.retrieve();
  console.log(`New Favorite Number: ${currentFavoriteNumber}`);

  // console.log("Deploy with tx data only");
  // const nonce = await provider.getTransactionCount(wallet.address);
  // tx = {
  //   nonce: 1,
  //   gasPrice: 100000000000,
  //   gasLimit: 1000000,
  //   to: null,
  //   value: 0,
  //   data: "60806040527f736e6970707900000000000000000000000000000000000000000000000000005f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908360601c021790555034801561005b575f80fd5b50610a2b806100695f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c80632e64cec1146100645780636f760f41146100825780638bab8dd51461009e5780639e7a13ad146100ce578063c7a0d9f6146100ff578063fbe1a4311461011d575b5f80fd5b61006c610139565b6040516100799190610352565b60405180910390f35b61009c600480360381019061009791906104eb565b61015d565b005b6100b860048036038101906100b39190610545565b6101e1565b6040516100c5919061059b565b60405180910390f35b6100e860048036038101906100e391906105b4565b61020e565b6040516100f6929190610659565b60405180910390f35b6101076102c3565b6040516101149190610352565b60405180910390f35b610137600480360381019061013291906106b1565b6102e4565b005b5f60015f9054906101000a90046fffffffffffffffffffffffffffffffff16905090565b6002604051806040016040528083815260200184815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015560208201518160010190816101b791906108d6565b505050806003836040516101cb91906109df565b9081526020016040518091039020819055505050565b6003818051602081018201805184825260208301602085012081835280955050505050505f915090505481565b6002818154811061021d575f80fd5b905f5260205f2090600202015f91509050805f01549080600101805461024290610709565b80601f016020809104026020016040519081016040528092919081815260200182805461026e90610709565b80156102b95780601f10610290576101008083540402835291602001916102b9565b820191905f5260205f20905b81548152906001019060200180831161029c57829003601f168201915b5050505050905082565b60015f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b8060015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550610324610139565b5050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61034c81610328565b82525050565b5f6020820190506103655f830184610343565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103ca82610384565b810181811067ffffffffffffffff821117156103e9576103e8610394565b5b80604052505050565b5f6103fb61036b565b905061040782826103c1565b919050565b5f67ffffffffffffffff82111561042657610425610394565b5b61042f82610384565b9050602081019050919050565b828183375f83830152505050565b5f61045c6104578461040c565b6103f2565b90508281526020810184848401111561047857610477610380565b5b61048384828561043c565b509392505050565b5f82601f83011261049f5761049e61037c565b5b81356104af84826020860161044a565b91505092915050565b5f819050919050565b6104ca816104b8565b81146104d4575f80fd5b50565b5f813590506104e5816104c1565b92915050565b5f806040838503121561050157610500610374565b5b5f83013567ffffffffffffffff81111561051e5761051d610378565b5b61052a8582860161048b565b925050602061053b858286016104d7565b9150509250929050565b5f6020828403121561055a57610559610374565b5b5f82013567ffffffffffffffff81111561057757610576610378565b5b6105838482850161048b565b91505092915050565b610595816104b8565b82525050565b5f6020820190506105ae5f83018461058c565b92915050565b5f602082840312156105c9576105c8610374565b5b5f6105d6848285016104d7565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156106165780820151818401526020810190506105fb565b5f8484015250505050565b5f61062b826105df565b61063581856105e9565b93506106458185602086016105f9565b61064e81610384565b840191505092915050565b5f60408201905061066c5f83018561058c565b818103602083015261067e8184610621565b90509392505050565b61069081610328565b811461069a575f80fd5b50565b5f813590506106ab81610687565b92915050565b5f602082840312156106c6576106c5610374565b5b5f6106d38482850161069d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061072057607f821691505b602082108103610733576107326106dc565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261075a565b61079f868361075a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107da6107d56107d0846104b8565b6107b7565b6104b8565b9050919050565b5f819050919050565b6107f3836107c0565b6108076107ff826107e1565b848454610766565b825550505050565b5f90565b61081b61080f565b6108268184846107ea565b505050565b5b818110156108495761083e5f82610813565b60018101905061082c565b5050565b601f82111561088e5761085f81610739565b6108688461074b565b81016020851015610877578190505b61088b6108838561074b565b83018261082b565b50505b505050565b5f82821c905092915050565b5f6108ae5f1984600802610893565b1980831691505092915050565b5f6108c6838361089f565b9150826002028217905092915050565b6108df826105df565b67ffffffffffffffff8111156108f8576108f7610394565b5b6109028254610709565b61090d82828561084d565b5f60209050601f83116001811461093e575f841561092c578287015190505b61093685826108bb565b86555061099d565b601f19841661094c86610739565b5f5b828110156109735784890151825560018201915060208501945060208101905061094e565b86831015610990578489015161098c601f89168261089f565b8355505b6001600288020188555050505b505050505050565b5f81905092915050565b5f6109b9826105df565b6109c381856109a5565b93506109d38185602086016105f9565b80840191505092915050565b5f6109ea82846109af565b91508190509291505056fea26469706673582212204b822ce31bbc130789fdd38c87434e91a461cf11bee3a72697cef783859e6fe264736f6c63430008140033",
  //   chainId: 1337,
  // };
  // let SignedTxResponse = await wallet.signTransaction(tx);
  // const sentTxResponse = await wallet.sendTransaction(tx);
  // console.log(SignedTxResponse);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
